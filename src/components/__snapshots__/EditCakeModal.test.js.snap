// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Component: <EditCakeModal> Renders <EditCakeModal> 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <EditCakeModal
    cake={
        Object {
            "desc": "description of test cake",
            "image": "https://picsum.photos/400",
            "title": "Testy Cake",
          }
    }
    closeIcon={false}
    closeOnDocumentClick={false}
    onClose={[Function]}
    onSubmit={[Function]}
    open={false}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <ModalHeader>
          Edit cake
</ModalHeader>,
        <ModalContent>
          <Form
                    as="form"
          >
                    <FormField>
                              <label
                                        htmlFor="cakeTitle"
                              >
                                        Title
                                        <FormInput
                                                  as={[Function]}
                                                  control={[Function]}
                                                  id="cakeTitle"
                                                  onChange={[Function]}
                                                  placeholder="Cake's title"
                                                  value="Testy Cake"
                                        />
                              </label>
                    </FormField>
                    <FormField>
                              <label
                                        htmlFor="cakeDescription"
                              >
                                        Description
                                        <FormTextArea
                                                  as={[Function]}
                                                  control={[Function]}
                                                  id="cakeDescription"
                                                  onChange={[Function]}
                                                  placeholder="Cake's description"
                                                  value="description of test cake"
                                        />
                              </label>
                    </FormField>
                    <FormField>
                              <label
                                        htmlFor="cakeImg"
                              >
                                        Image URL
                                        <FormInput
                                                  as={[Function]}
                                                  control={[Function]}
                                                  id="cakeImg"
                                                  onChange={[Function]}
                                                  placeholder="Cake's image URL"
                                                  value="https://picsum.photos/400"
                                        />
                              </label>
                    </FormField>
          </Form>
</ModalContent>,
        <ModalActions>
          <Button
                    as="button"
                    icon={true}
                    negative={true}
                    onClick={[Function]}
          >
                    <Icon
                              as="i"
                              name="remove"
                    />
                    Cancel
          </Button>
          <Button
                    as="button"
                    icon={true}
                    onClick={[Function]}
                    positive={true}
          >
                    <Icon
                              as="i"
                              name="checkmark"
                    />
                    Save
          </Button>
</ModalActions>,
      ],
      "closeIcon": false,
      "closeOnDimmerClick": true,
      "closeOnDocumentClick": false,
      "dimmer": true,
      "eventPool": "Modal",
      "onClose": [Function],
      "open": false,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": "Edit cake",
        },
        "ref": null,
        "rendered": "Edit cake",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <Form
            as="form"
>
            <FormField>
                        <label
                                    htmlFor="cakeTitle"
                        >
                                    Title
                                    <FormInput
                                                as={[Function]}
                                                control={[Function]}
                                                id="cakeTitle"
                                                onChange={[Function]}
                                                placeholder="Cake's title"
                                                value="Testy Cake"
                                    />
                        </label>
            </FormField>
            <FormField>
                        <label
                                    htmlFor="cakeDescription"
                        >
                                    Description
                                    <FormTextArea
                                                as={[Function]}
                                                control={[Function]}
                                                id="cakeDescription"
                                                onChange={[Function]}
                                                placeholder="Cake's description"
                                                value="description of test cake"
                                    />
                        </label>
            </FormField>
            <FormField>
                        <label
                                    htmlFor="cakeImg"
                        >
                                    Image URL
                                    <FormInput
                                                as={[Function]}
                                                control={[Function]}
                                                id="cakeImg"
                                                onChange={[Function]}
                                                placeholder="Cake's image URL"
                                                value="https://picsum.photos/400"
                                    />
                        </label>
            </FormField>
</Form>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "as": "form",
            "children": Array [
              <FormField>
                <label
                                htmlFor="cakeTitle"
                >
                                Title
                                <FormInput
                                                as={[Function]}
                                                control={[Function]}
                                                id="cakeTitle"
                                                onChange={[Function]}
                                                placeholder="Cake's title"
                                                value="Testy Cake"
                                />
                </label>
</FormField>,
              <FormField>
                <label
                                htmlFor="cakeDescription"
                >
                                Description
                                <FormTextArea
                                                as={[Function]}
                                                control={[Function]}
                                                id="cakeDescription"
                                                onChange={[Function]}
                                                placeholder="Cake's description"
                                                value="description of test cake"
                                />
                </label>
</FormField>,
              <FormField>
                <label
                                htmlFor="cakeImg"
                >
                                Image URL
                                <FormInput
                                                as={[Function]}
                                                control={[Function]}
                                                id="cakeImg"
                                                onChange={[Function]}
                                                placeholder="Cake's image URL"
                                                value="https://picsum.photos/400"
                                />
                </label>
</FormField>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": <label
                  htmlFor="cakeTitle"
>
                  Title
                  <FormInput
                                    as={[Function]}
                                    control={[Function]}
                                    id="cakeTitle"
                                    onChange={[Function]}
                                    placeholder="Cake's title"
                                    value="Testy Cake"
                  />
</label>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    "Title",
                    <FormInput
                      as={[Function]}
                      control={[Function]}
                      id="cakeTitle"
                      onChange={[Function]}
                      placeholder="Cake's title"
                      value="Testy Cake"
/>,
                  ],
                  "htmlFor": "cakeTitle",
                },
                "ref": null,
                "rendered": Array [
                  "Title",
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "as": [Function],
                      "control": [Function],
                      "id": "cakeTitle",
                      "onChange": [Function],
                      "placeholder": "Cake's title",
                      "value": "Testy Cake",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": "label",
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": <label
                  htmlFor="cakeDescription"
>
                  Description
                  <FormTextArea
                                    as={[Function]}
                                    control={[Function]}
                                    id="cakeDescription"
                                    onChange={[Function]}
                                    placeholder="Cake's description"
                                    value="description of test cake"
                  />
</label>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    "Description",
                    <FormTextArea
                      as={[Function]}
                      control={[Function]}
                      id="cakeDescription"
                      onChange={[Function]}
                      placeholder="Cake's description"
                      value="description of test cake"
/>,
                  ],
                  "htmlFor": "cakeDescription",
                },
                "ref": null,
                "rendered": Array [
                  "Description",
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "as": [Function],
                      "control": [Function],
                      "id": "cakeDescription",
                      "onChange": [Function],
                      "placeholder": "Cake's description",
                      "value": "description of test cake",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": "label",
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": <label
                  htmlFor="cakeImg"
>
                  Image URL
                  <FormInput
                                    as={[Function]}
                                    control={[Function]}
                                    id="cakeImg"
                                    onChange={[Function]}
                                    placeholder="Cake's image URL"
                                    value="https://picsum.photos/400"
                  />
</label>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    "Image URL",
                    <FormInput
                      as={[Function]}
                      control={[Function]}
                      id="cakeImg"
                      onChange={[Function]}
                      placeholder="Cake's image URL"
                      value="https://picsum.photos/400"
/>,
                  ],
                  "htmlFor": "cakeImg",
                },
                "ref": null,
                "rendered": Array [
                  "Image URL",
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "as": [Function],
                      "control": [Function],
                      "id": "cakeImg",
                      "onChange": [Function],
                      "placeholder": "Cake's image URL",
                      "value": "https://picsum.photos/400",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": "label",
              },
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <Button
              as="button"
              icon={true}
              negative={true}
              onClick={[Function]}
>
              <Icon
                            as="i"
                            name="remove"
              />
              Cancel
</Button>,
            <Button
              as="button"
              icon={true}
              onClick={[Function]}
              positive={true}
>
              <Icon
                            as="i"
                            name="checkmark"
              />
              Save
</Button>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "as": "button",
              "children": Array [
                <Icon
                  as="i"
                  name="remove"
/>,
                "Cancel",
              ],
              "icon": true,
              "negative": true,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "as": "i",
                  "name": "remove",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "Cancel",
            ],
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "as": "button",
              "children": Array [
                <Icon
                  as="i"
                  name="checkmark"
/>,
                "Save",
              ],
              "icon": true,
              "onClick": [Function],
              "positive": true,
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "as": "i",
                  "name": "checkmark",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "Save",
            ],
            "type": [Function],
          },
        ],
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <ModalHeader>
            Edit cake
</ModalHeader>,
          <ModalContent>
            <Form
                        as="form"
            >
                        <FormField>
                                    <label
                                                htmlFor="cakeTitle"
                                    >
                                                Title
                                                <FormInput
                                                            as={[Function]}
                                                            control={[Function]}
                                                            id="cakeTitle"
                                                            onChange={[Function]}
                                                            placeholder="Cake's title"
                                                            value="Testy Cake"
                                                />
                                    </label>
                        </FormField>
                        <FormField>
                                    <label
                                                htmlFor="cakeDescription"
                                    >
                                                Description
                                                <FormTextArea
                                                            as={[Function]}
                                                            control={[Function]}
                                                            id="cakeDescription"
                                                            onChange={[Function]}
                                                            placeholder="Cake's description"
                                                            value="description of test cake"
                                                />
                                    </label>
                        </FormField>
                        <FormField>
                                    <label
                                                htmlFor="cakeImg"
                                    >
                                                Image URL
                                                <FormInput
                                                            as={[Function]}
                                                            control={[Function]}
                                                            id="cakeImg"
                                                            onChange={[Function]}
                                                            placeholder="Cake's image URL"
                                                            value="https://picsum.photos/400"
                                                />
                                    </label>
                        </FormField>
            </Form>
</ModalContent>,
          <ModalActions>
            <Button
                        as="button"
                        icon={true}
                        negative={true}
                        onClick={[Function]}
            >
                        <Icon
                                    as="i"
                                    name="remove"
                        />
                        Cancel
            </Button>
            <Button
                        as="button"
                        icon={true}
                        onClick={[Function]}
                        positive={true}
            >
                        <Icon
                                    as="i"
                                    name="checkmark"
                        />
                        Save
            </Button>
</ModalActions>,
        ],
        "closeIcon": false,
        "closeOnDimmerClick": true,
        "closeOnDocumentClick": false,
        "dimmer": true,
        "eventPool": "Modal",
        "onClose": [Function],
        "open": false,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": "Edit cake",
          },
          "ref": null,
          "rendered": "Edit cake",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <Form
              as="form"
>
              <FormField>
                            <label
                                          htmlFor="cakeTitle"
                            >
                                          Title
                                          <FormInput
                                                        as={[Function]}
                                                        control={[Function]}
                                                        id="cakeTitle"
                                                        onChange={[Function]}
                                                        placeholder="Cake's title"
                                                        value="Testy Cake"
                                          />
                            </label>
              </FormField>
              <FormField>
                            <label
                                          htmlFor="cakeDescription"
                            >
                                          Description
                                          <FormTextArea
                                                        as={[Function]}
                                                        control={[Function]}
                                                        id="cakeDescription"
                                                        onChange={[Function]}
                                                        placeholder="Cake's description"
                                                        value="description of test cake"
                                          />
                            </label>
              </FormField>
              <FormField>
                            <label
                                          htmlFor="cakeImg"
                            >
                                          Image URL
                                          <FormInput
                                                        as={[Function]}
                                                        control={[Function]}
                                                        id="cakeImg"
                                                        onChange={[Function]}
                                                        placeholder="Cake's image URL"
                                                        value="https://picsum.photos/400"
                                          />
                            </label>
              </FormField>
</Form>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "as": "form",
              "children": Array [
                <FormField>
                  <label
                                    htmlFor="cakeTitle"
                  >
                                    Title
                                    <FormInput
                                                      as={[Function]}
                                                      control={[Function]}
                                                      id="cakeTitle"
                                                      onChange={[Function]}
                                                      placeholder="Cake's title"
                                                      value="Testy Cake"
                                    />
                  </label>
</FormField>,
                <FormField>
                  <label
                                    htmlFor="cakeDescription"
                  >
                                    Description
                                    <FormTextArea
                                                      as={[Function]}
                                                      control={[Function]}
                                                      id="cakeDescription"
                                                      onChange={[Function]}
                                                      placeholder="Cake's description"
                                                      value="description of test cake"
                                    />
                  </label>
</FormField>,
                <FormField>
                  <label
                                    htmlFor="cakeImg"
                  >
                                    Image URL
                                    <FormInput
                                                      as={[Function]}
                                                      control={[Function]}
                                                      id="cakeImg"
                                                      onChange={[Function]}
                                                      placeholder="Cake's image URL"
                                                      value="https://picsum.photos/400"
                                    />
                  </label>
</FormField>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": <label
                    htmlFor="cakeTitle"
>
                    Title
                    <FormInput
                                        as={[Function]}
                                        control={[Function]}
                                        id="cakeTitle"
                                        onChange={[Function]}
                                        placeholder="Cake's title"
                                        value="Testy Cake"
                    />
</label>,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      "Title",
                      <FormInput
                        as={[Function]}
                        control={[Function]}
                        id="cakeTitle"
                        onChange={[Function]}
                        placeholder="Cake's title"
                        value="Testy Cake"
/>,
                    ],
                    "htmlFor": "cakeTitle",
                  },
                  "ref": null,
                  "rendered": Array [
                    "Title",
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "as": [Function],
                        "control": [Function],
                        "id": "cakeTitle",
                        "onChange": [Function],
                        "placeholder": "Cake's title",
                        "value": "Testy Cake",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                  ],
                  "type": "label",
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": <label
                    htmlFor="cakeDescription"
>
                    Description
                    <FormTextArea
                                        as={[Function]}
                                        control={[Function]}
                                        id="cakeDescription"
                                        onChange={[Function]}
                                        placeholder="Cake's description"
                                        value="description of test cake"
                    />
</label>,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      "Description",
                      <FormTextArea
                        as={[Function]}
                        control={[Function]}
                        id="cakeDescription"
                        onChange={[Function]}
                        placeholder="Cake's description"
                        value="description of test cake"
/>,
                    ],
                    "htmlFor": "cakeDescription",
                  },
                  "ref": null,
                  "rendered": Array [
                    "Description",
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "as": [Function],
                        "control": [Function],
                        "id": "cakeDescription",
                        "onChange": [Function],
                        "placeholder": "Cake's description",
                        "value": "description of test cake",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                  ],
                  "type": "label",
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": <label
                    htmlFor="cakeImg"
>
                    Image URL
                    <FormInput
                                        as={[Function]}
                                        control={[Function]}
                                        id="cakeImg"
                                        onChange={[Function]}
                                        placeholder="Cake's image URL"
                                        value="https://picsum.photos/400"
                    />
</label>,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      "Image URL",
                      <FormInput
                        as={[Function]}
                        control={[Function]}
                        id="cakeImg"
                        onChange={[Function]}
                        placeholder="Cake's image URL"
                        value="https://picsum.photos/400"
/>,
                    ],
                    "htmlFor": "cakeImg",
                  },
                  "ref": null,
                  "rendered": Array [
                    "Image URL",
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "as": [Function],
                        "control": [Function],
                        "id": "cakeImg",
                        "onChange": [Function],
                        "placeholder": "Cake's image URL",
                        "value": "https://picsum.photos/400",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                  ],
                  "type": "label",
                },
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <Button
                as="button"
                icon={true}
                negative={true}
                onClick={[Function]}
>
                <Icon
                                as="i"
                                name="remove"
                />
                Cancel
</Button>,
              <Button
                as="button"
                icon={true}
                onClick={[Function]}
                positive={true}
>
                <Icon
                                as="i"
                                name="checkmark"
                />
                Save
</Button>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "as": "button",
                "children": Array [
                  <Icon
                    as="i"
                    name="remove"
/>,
                  "Cancel",
                ],
                "icon": true,
                "negative": true,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "as": "i",
                    "name": "remove",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "Cancel",
              ],
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "as": "button",
                "children": Array [
                  <Icon
                    as="i"
                    name="checkmark"
/>,
                  "Save",
                ],
                "icon": true,
                "onClick": [Function],
                "positive": true,
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "as": "i",
                    "name": "checkmark",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "Save",
              ],
              "type": [Function],
            },
          ],
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
